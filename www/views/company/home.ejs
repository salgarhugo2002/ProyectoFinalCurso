<%- include("../templates/cabecera") %>
    </head>


    <body>

        <%- include("../templates/menu") %>


            <form action="/publication/create" method="post" id="formulario" style="margin-top: 5%;">
                Titulo<input type="text" name="titulo" id="titulo">
                <br>
                Texto <input type="text" name="texto" id="texto">
                <br>
                Estudios <input type="text" name="filtroEstudios" id="estudios">
                <br>
                Municipio <input type="text" name="filtroMunicipio" id="municipio">
                <input type="submit" value="enviar">
                Caducidad <input type="date" name="caducidad" id="caducidad">
                <br>
            </form>
            <script>

                const miFormulario = document.getElementById("formulario");

                miFormulario.addEventListener("submit", async function (event) {
                    event.preventDefault(); // evita que el formulario se envÃ­e por defecto

                    const formData = new FormData(miFormulario); // crea un objeto FormData con los datos del formulario
                    const jsonData = {};

                    for (const [key, value] of formData.entries()) {
                        jsonData['id'] = await idmax2()
                        jsonData['companyId'] = 1;
                        jsonData[key] = value;
                    }

                    if(jsonData['id'] == undefined){
                        jsonData['id'] = 1;
                    }

                    const jsonString = JSON.stringify(jsonData); // convierte el objeto a una cadena JSON

                    console.log(jsonString); // muestra la cadena JSON en la consola (puede ser enviada al servidor)

                    fetch('http://localhost:3000/publication/create',
                        {
                            method: "POST",
                            body: jsonString,
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })

                });



                function returnMaxId2() {
                    return fetch('http://localhost:3000/publication/idmax')
                        .then((res) => res.json());

                }

                async function idmax2() {

                    const response = await returnMaxId2();

                    try {

                        let abc = response[0].id;
                        return abc + 1;
                    } catch (error) {
                        console.log("no hi ha cap publicacio a la BDD, pero hem posat que la id default sigui 0 , aquest misatge salta igual pero funciona tot");
                    }
                }


            </script>
    </body>